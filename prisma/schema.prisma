generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model aime_player {
  id                   Int                   @id @default(autoincrement())
  ext_id               Int                   @unique(map: "sqlite_autoindex_aime_player_1")
  luid                 String                @unique(map: "sqlite_autoindex_aime_player_2")
  register_time        DateTime
  access_time          DateTime
  cm_user_data         cm_user_data[]
  idz_profile          idz_profile[]
  idz_team_reservation idz_team_reservation?
}

model cm_user_activity {
  id           Int          @id @default(autoincrement())
  profile_id   Int
  kind         Int
  activity_id  Int
  sort_number  Int
  param1       Int
  param2       Int
  param3       Int
  param4       Int
  cm_user_data cm_user_data @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, kind, activity_id], map: "sqlite_autoindex_cm_user_activity_1")
}

model cm_user_character {
  id             Int          @id @default(autoincrement())
  profile_id     Int
  character_id   Int
  play_count     Int
  level          Int
  skill_id       Int
  friendship_exp Int
  is_valid       Int
  is_new_mark    Int
  param1         Int
  param2         Int
  cm_user_data   cm_user_data @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, character_id], map: "sqlite_autoindex_cm_user_character_1")
}

model cm_user_charge {
  id            Int          @id @default(autoincrement())
  profile_id    Int
  charge_id     Int
  stock         Int
  purchase_date String
  valid_date    String
  param1        Int
  param2        Int
  param_date    String
  cm_user_data  cm_user_data @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, charge_id], map: "sqlite_autoindex_cm_user_charge_1")
}

model cm_user_course {
  id             Int          @id @default(autoincrement())
  profile_id     Int
  course_id      Int
  class_id       Int
  play_count     Int
  score_max      Int
  is_full_combo  String
  is_all_justice String
  is_success     String
  score_rank     Int
  event_id       Int
  last_play_date String
  param1         Int
  param2         Int
  param3         Int
  param4         Int
  is_clear       String
  cm_user_data   cm_user_data @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, course_id], map: "sqlite_autoindex_cm_user_course_1")
}

model cm_user_data {
  id                         Int                     @id @default(autoincrement())
  player_id                  Int
  access_code                String?
  user_name                  String?
  is_web_join                String?
  web_limit_date             String?
  level                      Int?
  reincarnation_num          Int?
  exp                        Int?
  point                      Int?
  total_point                Int?
  play_count                 Int?
  multi_play_count           Int?
  multi_win_count            Int?
  request_res_count          Int?
  accept_res_count           Int?
  success_res_count          Int?
  player_rating              Int?
  highest_rating             Int?
  nameplate_id               Int?
  frame_id                   Int?
  character_id               Int?
  trophy_id                  Int?
  played_tutorial_bit        Int?
  first_tutorial_cancel_num  Int?
  master_tutorial_cancel_num Int?
  total_repertoire_count     Int?
  total_map_num              Int?
  total_hi_score             Int?
  total_basic_high_score     Int?
  total_advanced_high_score  Int?
  total_expert_high_score    Int?
  total_master_high_score    Int?
  event_watched_date         String?
  friend_count               Int?
  is_maimai                  String?
  first_game_id              String?
  first_rom_version          String?
  first_data_version         String?
  first_play_date            String?
  last_game_id               String?
  last_rom_version           String?
  last_data_version          String?
  last_play_date             String?
  last_place_id              Int?
  last_place_name            String?
  last_region_id             String?
  last_region_name           String?
  last_all_net_id            String?
  last_client_id             String?
  aime_player                aime_player             @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  cm_user_activity           cm_user_activity[]
  cm_user_character          cm_user_character[]
  cm_user_charge             cm_user_charge[]
  cm_user_course             cm_user_course[]
  cm_user_data_ex            cm_user_data_ex?
  cm_user_duel_list          cm_user_duel_list[]
  cm_user_game_option        cm_user_game_option?
  cm_user_game_option_ex     cm_user_game_option_ex?
  cm_user_item               cm_user_item[]
  cm_user_map                cm_user_map[]
  cm_user_music              cm_user_music[]
  cm_user_playlog            cm_user_playlog[]
  cm_user_recent_rating      cm_user_recent_rating[]
}

model cm_user_data_ex {
  id                    Int          @id @default(autoincrement())
  compatible_cm_version String
  medal                 Int
  map_icon_id           Int
  voice_id              Int
  ext1                  Int
  ext2                  Int
  ext3                  Int
  ext4                  Int
  ext5                  Int
  ext6                  Int
  ext7                  Int
  ext8                  Int
  ext9                  Int
  ext10                 Int
  ext11                 Int
  ext12                 Int
  ext13                 Int
  ext14                 Int
  ext15                 Int
  ext16                 Int
  ext17                 Int
  ext18                 Int
  ext19                 Int
  ext20                 Int
  ext_str1              String
  ext_str2              String
  ext_str3              String
  ext_str4              String
  ext_str5              String
  ext_long1             Int
  ext_long2             Int
  ext_long3             Int
  ext_long4             Int
  ext_long5             Int
  cm_user_data          cm_user_data @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model cm_user_duel_list {
  id             Int          @id @default(autoincrement())
  profile_id     Int
  duel_id        Int
  progress       Int
  point          Int
  is_clear       Boolean
  last_play_date String
  param1         Int
  param2         Int
  param3         Int
  param4         Int
  cm_user_data   cm_user_data @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, duel_id], map: "sqlite_autoindex_cm_user_duel_list_1")
}

model cm_user_game_option {
  id                 Int          @id @default(autoincrement())
  bg_info            Int
  field_color        Int
  guide_sound        Int
  sound_effect       Int
  guide_line         Int
  speed              Int
  option_set         Int
  matching           Int
  judge_pos          Int
  rating             Int
  judge_justice      Int
  judge_attack       Int
  headphone          Int
  player_level       Int
  success_tap        Int
  success_ex_tap     Int
  success_slide_hold Int
  success_air        Int
  success_flick      Int
  success_skill      Int
  success_tap_timbre Int
  privacy            Int
  cm_user_data       cm_user_data @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model cm_user_game_option_ex {
  id           Int          @id @default(autoincrement())
  ext1         Int
  ext2         Int
  ext3         Int
  ext4         Int
  ext5         Int
  ext6         Int
  ext7         Int
  ext8         Int
  ext9         Int
  ext10        Int
  ext11        Int
  ext12        Int
  ext13        Int
  ext14        Int
  ext15        Int
  ext16        Int
  ext17        Int
  ext18        Int
  ext19        Int
  ext20        Int
  cm_user_data cm_user_data @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model cm_user_item {
  id           Int          @id @default(autoincrement())
  profile_id   Int
  item_kind    Int
  item_id      Int
  stock        Int
  is_valid     String
  cm_user_data cm_user_data @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, item_kind, item_id], map: "sqlite_autoindex_cm_user_item_1")
}

model cm_user_map {
  id           Int          @id @default(autoincrement())
  profile_id   Int
  map_id       Int
  position     Int
  is_clear     String
  area_id      Int
  route_number Int
  event_id     Int
  rate         Int
  status_count Int
  is_valid     String
  cm_user_data cm_user_data @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, map_id], map: "sqlite_autoindex_cm_user_map_1")
}

model cm_user_music {
  id                Int          @id @default(autoincrement())
  profile_id        Int
  music_id          Int
  level             Int
  play_count        Int
  score_max         Int
  res_request_count Int
  res_accept_count  Int
  res_success_count Int
  miss_count        Int
  max_combo_count   Int
  is_full_combo     String
  is_all_justice    String
  is_success        String
  full_chain        Int
  max_chain         Int
  score_rank        Int
  is_lock           String
  cm_user_data      cm_user_data @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, music_id, level], map: "sqlite_autoindex_cm_user_music_1")
}

model cm_user_playlog {
  id                  Int          @id @default(autoincrement())
  profile_id          Int
  order_id            Int
  sort_number         Int
  place_id            Int
  play_date           String
  user_play_date      String
  music_id            Int
  level               Int
  custom_id           Int
  played_user_id1     Int
  played_user_id2     Int
  played_user_id3     Int
  played_user_name1   String
  played_user_name2   String
  played_user_name3   String
  played_music_level1 Int
  played_music_level2 Int
  played_music_level3 Int
  played_custom1      Int
  played_custom2      Int
  played_custom3      Int
  track               Int
  score               Int
  rank                Int
  max_combo           Int
  max_chain           Int
  rate_tap            Int
  rate_hold           Int
  rate_slide          Int
  rate_air            Int
  rate_flick          Int
  judge_guilty        Int
  judge_attack        Int
  judge_justice       Int
  judge_critical      Int
  event_id            Int
  player_rating       Int
  is_new_record       String
  is_full_combo       String
  full_chain_kind     Int
  is_all_justice      String
  is_continue         String
  is_free_to_play     String
  character_id        Int
  skill_id            Int
  play_kind           Int
  is_clear            String
  skill_level         Int
  skill_effect        Int
  place_name          String
  is_maimai           String
  cm_user_data        cm_user_data @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model cm_user_recent_rating {
  id               Int          @id @default(autoincrement())
  profile_id       Int
  sort_order       Int
  music_id         Int
  difficult_id     Int
  rom_version_code Int
  score            Int
  cm_user_data     cm_user_data @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, sort_order], map: "sqlite_autoindex_cm_user_recent_rating_1")
}

model idz_background_unlock {
  id            Int         @id @default(autoincrement())
  profile_id    Int
  background_no Int
  idz_profile   idz_profile @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, background_no], map: "sqlite_autoindex_idz_background_unlock_1")
}

model idz_car {
  id                Int                 @id @default(autoincrement())
  profile_id        Int
  selector          Int
  field_00          Int
  field_02          Int
  field_04          String
  field_46          Int
  field_48          Int
  field_4a          Int
  field_4c          Int
  field_50_lo       Int
  field_50_hi       Int
  field_58          Int
  field_5a          Int
  field_5b          Int
  field_5c          Int
  field_5e          Int
  idz_profile       idz_profile         @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  idz_car_selection idz_car_selection[]

  @@unique([profile_id, selector], map: "sqlite_autoindex_idz_car_1")
}

model idz_car_selection {
  id          Int         @id @default(autoincrement())
  car_id      Int
  idz_car     idz_car     @relation(fields: [car_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  idz_profile idz_profile @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model idz_chara {
  id          Int         @id @default(autoincrement())
  gender      String
  field_02    Int
  field_04    Int
  field_06    Int
  field_08    Int
  field_0a    Int
  field_0c    Int
  field_0e    Int
  title       Int
  background  Int
  idz_profile idz_profile @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model idz_course_plays {
  id          Int         @id @default(autoincrement())
  profile_id  Int
  course_no   Int
  count       Int
  idz_profile idz_profile @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, course_no], map: "sqlite_autoindex_idz_course_plays_1")
}

model idz_free_car {
  id          Int         @id @default(autoincrement())
  valid_from  DateTime
  idz_profile idz_profile @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model idz_my_chara {
  id          Int         @id @default(autoincrement())
  profile_id  Int
  my_chara_no Int
  idz_profile idz_profile @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, my_chara_no], map: "sqlite_autoindex_idz_my_chara_1")
}

model idz_profile {
  id                     Int                      @id @default(autoincrement())
  player_id              Int
  version                Int
  name                   String
  lv                     Int
  exp                    Int
  fame                   Int
  dpoint                 Int
  mileage                Int
  register_time          DateTime
  access_time            DateTime
  aime_player            aime_player              @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  idz_background_unlock  idz_background_unlock[]
  idz_car                idz_car[]
  idz_car_selection      idz_car_selection?
  idz_chara              idz_chara?
  idz_course_plays       idz_course_plays[]
  idz_free_car           idz_free_car?
  idz_my_chara           idz_my_chara[]
  idz_settings           idz_settings?
  idz_solo_mission_state idz_solo_mission_state[]
  idz_stamp_selections   idz_stamp_selections?
  idz_stamp_unlock       idz_stamp_unlock[]
  idz_story_cell_state   idz_story_cell_state[]
  idz_story_state        idz_story_state?
  idz_ta_best            idz_ta_best[]
  idz_ta_result          idz_ta_result[]
  idz_team_member        idz_team_member?
  idz_title_unlock       idz_title_unlock[]
  idz_unlocks            idz_unlocks?
  idz_weekly_missions    idz_weekly_missions?

  @@unique([player_id, version], map: "sqlite_autoindex_idz_profile_1")
}

model idz_settings {
  id            Int         @id @default(autoincrement())
  music         Int
  pack          Int
  aura          Int
  paper_cup     Int
  gauges        Int
  driving_style Int
  idz_profile   idz_profile @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model idz_solo_mission_state {
  id          Int         @id @default(autoincrement())
  profile_id  Int
  grid_no     Int
  cell_no     Int
  value       Int
  idz_profile idz_profile @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, grid_no, cell_no], map: "sqlite_autoindex_idz_solo_mission_state_1")
}

model idz_stamp_selections {
  id          Int         @id @default(autoincrement())
  stamp_01    Int
  stamp_02    Int
  stamp_03    Int
  stamp_04    Int
  idz_profile idz_profile @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model idz_stamp_unlock {
  id          Int              @id @default(autoincrement())
  profile_id  Int
  stamp_no    Unsupported("")?
  idz_profile idz_profile      @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, stamp_no], map: "sqlite_autoindex_idz_stamp_unlock_1")
}

model idz_story_cell_state {
  id          Int         @id @default(autoincrement())
  profile_id  Int
  row_no      Int
  col_no      Int
  a           Int
  b           Int
  c           Int
  idz_profile idz_profile @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, row_no, col_no], map: "sqlite_autoindex_idz_story_cell_state_1")
}

model idz_story_state {
  id          Int         @id @default(autoincrement())
  x           Int
  y           Int
  idz_profile idz_profile @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model idz_ta_best {
  id            Int         @id @default(autoincrement())
  profile_id    Int
  route_no      Int
  total_time    Float
  section_times String
  flags         Int
  grade         Int
  car_selector  Int
  timestamp     DateTime
  idz_profile   idz_profile @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, route_no], map: "sqlite_autoindex_idz_ta_best_1")
}

model idz_ta_result {
  id            Int         @id @default(autoincrement())
  profile_id    Int
  route_no      Int
  total_time    Float
  section_times String
  flags         Int
  grade         Int
  car_selector  Int
  timestamp     DateTime
  idz_profile   idz_profile @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model idz_team {
  id                   Int                    @id @default(autoincrement())
  version              Int
  ext_id               Int
  name                 String
  name_bg              Int
  name_fx              Int
  register_time        DateTime
  idz_team_auto        idz_team_auto?
  idz_team_member      idz_team_member[]
  idz_team_reservation idz_team_reservation[]

  @@unique([version, ext_id], map: "sqlite_autoindex_idz_team_1")
}

model idz_team_auto {
  id        Int      @id @default(autoincrement())
  serial_no Int
  name_idx  Int
  idz_team  idz_team @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model idz_team_member {
  id          Int         @id @default(autoincrement())
  team_id     Int
  join_time   DateTime
  leader      Boolean
  idz_profile idz_profile @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  idz_team    idz_team    @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model idz_team_reservation {
  id          Int         @id @default(autoincrement())
  team_id     Int
  join_time   DateTime
  leader      Boolean
  aime_player aime_player @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  idz_team    idz_team    @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model idz_title_unlock {
  id          Int         @id @default(autoincrement())
  profile_id  Int
  title_no    Int
  idz_profile idz_profile @relation(fields: [profile_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([profile_id, title_no], map: "sqlite_autoindex_idz_title_unlock_1")
}

model idz_unlocks {
  id                  Int         @id @default(autoincrement())
  auras               Int
  cup                 Int
  gauges              Int
  music               Int
  last_mileage_reward Int
  idz_profile         idz_profile @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model idz_weekly_missions {
  id             Int         @id @default(autoincrement())
  weekly_reset   DateTime
  mission_left   Int
  progress_left  Int
  params_left    Int
  mission_right  Int
  progress_right Int
  params_right   Int
  idz_profile    idz_profile @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model meta {
  schemaver Int

  @@ignore
}
